name: Manual Deploy Workflow
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    # inputs:

permissions:
  id-token: write
  contents: write

env:
  organization: "Ankit0506"
  repository: "hello-world-1"

jobs:
    steps:
      - name: Extract branch name
        id: extract_branch
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "$BRANCH_NAME"

      - name: Show Runtime Env Values
        run: |
          echo ""
          echo "Running Staging Release workflow with the following Env Values:"
          echo ""
          echo "Deploying Branch: ${{ env.BRANCH_NAME }}"
          echo "Deploying to Environment: ${{ github.event.inputs.environment }}"

  build:
    name: Build Docker Images
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}

  deploy:
    name: Deploy Target Environment
    needs:
      - build
    runs-on: self-hosted
    steps:
      - name: Checkout hello-world-2
        uses: actions/checkout@v4
        with:
          ref: "main"
          repository: "Ankit0506/hello-world-2"
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}


      - name: Configure git Remote
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
        run: |
          BRANCH_NAME="${{ env.repository }}/${{ env.BRANCH_NAME }}"

          echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] configuring git..."

          BRANCH_EXISTS=$(git ls-remote --heads origin $BRANCH_NAME)
          if [[ -z ${BRANCH_EXISTS} ]]; then
            echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] branch does not exist"
            git checkout -b $BRANCH_NAME
          else
            echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] branch already exists"
            git fetch
            git switch $BRANCH_NAME
          fi
