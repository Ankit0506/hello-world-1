# name: Build and Deploy

# on: [push]

# permissions:
#   id-token: write
#   contents: write

env:
  organization: "Ankit0506"
  repository: "hello-world-1"
  remote_branch_name: "${{ github.actor }}-${{ github.run_id }}"
  branch_name: "${{ github.ref_name }}"

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    environment: staging  # Specify the environment where the MY_JSON_DATA variable is stored

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Print Master Details
        env:
          MY_JSON_DATA: ${{ vars.MY_JSON_DATA }}  # Access the JSON stored in the environment variable
    
        run: |
          # Install jq for parsing JSON
          sudo apt-get update && sudo apt-get install -y jq

          # Extract details for the master branch
          environment_file_path=$(echo "$MY_JSON_DATA" | jq -r '.master.environment_file_path')
          full_env_name=$(echo "$MY_JSON_DATA" | jq -r '.master.full_env_name')

          # Print the details
          echo "Master Environment File Path: $environment_file_path"
          echo "Master Full Environment Name: $full_env_name"

  deploy:
    name: Deploy Stage
    needs: build  # The deploy stage depends on the build stage
    runs-on: ubuntu-latest
    environment: staging  # Specify the environment where the MY_JSON_DATA variable is stored

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure git Remote
        env:
          BRANCH_NAME: ${{ env.remote_branch_name }}
        run: |
          echo $BRANCH_NAME=${{ env.remote_branch_name }}
          
      - name: Print Miami Details
        env:
            MY_JSON_DATA: ${{ vars.MY_JSON_DATA }} 
        run: |
            sudo apt-get update && sudo apt-get install -y jq
            environment_file_path=$(echo "$MY_JSON_DATA" | jq -r --arg branch "$BRANCH_NAME" '.[$branch].environment_file_path')
            full_env_name=$(echo "$MY_JSON_DATA" | jq -r --arg branch "$BRANCH_NAME" '.[$branch].full_env_name')

            if [ -z "$environment_file_path" ] || [ -z "$full_env_name" ]; then
              echo "No matching branch found in JSON data."
              exit 1
            else
              echo "Environment File Path: $environment_file_path"
              echo "Full Environment Name: $full_env_name"
            fi
