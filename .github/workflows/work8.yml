name: Compare Branch Name with JSON

on: [push]

permissions:
  id-token: write
  contents: write

env:
  organization: "Ankit0506"
  repository: "hello-world1"
  remote_branch_name: "${{ github.actor }}-${{ github.run_id }}"

jobs:
  match_branch:
    runs-on: self-hosted
    environment: dev  # Specify the environment where the variable is stored

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.remote_branch_name }}

      - name: Print Branch Name
        env:
          MY_JSON_DATA: ${{ vars.MY_JSON_DATA }}  # Access the JSON stored in GitHub environment variables
          BRANCH_NAME: ${{ github.ref_name }}     # Access the current branch name
        run: |
          # Install jq for parsing JSON
          sudo apt-get update && sudo apt-get install -y jq

          # Extract environment names from JSON
          branch_names=$(echo "$MY_JSON_DATA" | jq -r 'keys[]')

          # Loop through the branch names and check for a match
          match_found=false
          for name in $branch_names; do
            if [ "$name" == "${BRANCH_NAME##*/}" ]; then  # Remove refs/heads/ prefix if present
              echo "Branch name matches: $name"
              match_found=true
            fi
          done

          if [ "$match_found" == "false" ]; then
            echo "Branch name does not match any known environment."
            exit 1
          fi

  deploy:
    name: Deploy target environment
    needs: match_branch
    runs-on: self-hosted
    steps:
      - name: Checkout GitHub Actions
        uses: actions/checkout@v3
        with:
          ref: "main"
          repository: "Ankit0506/githubactions"
          
      - name: Set Tag Environment Variable
        run: echo "tag=${{ github.ref_name }}-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Configure Git Remote
        env:
          BRANCH_NAME: ${{ env.remote_branch_name }}
        run: |
          echo $BRANCH_NAME=${{ env.remote_branch_name }}
          echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] configuring git..."
          git config user.email "ankit.rai.0506@gmail.com"
          git config user.name "GitHub Actions"
          BRANCH_EXISTS=$(git ls-remote --heads origin $BRANCH_NAME)
          if [[ -z ${BRANCH_EXISTS} ]]; then
            echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] branch does not exist"
            git checkout -b $BRANCH_NAME
          else
            echo "[$(date +%Y-%m-%dT%H:%M:%S%z)] branch already exists"
            git fetch
            git switch $BRANCH_NAME
          fi

      - name: Update master Environment Configurations
        env:
          MY_JSON_DATA: ${{ vars.MY_JSON_DATA }}  # Ensure this is available in the environment
          BRANCH_NAME: ${{ env.remote_branch_name }}
        run: |
          env_names=$(echo "$MY_JSON_DATA" | jq -r 'keys[]')
          
          # Loop through the branch names and check for a match
          match_found=false
          for name in $env_names; do
            if [ "$name" == "${BRANCH_NAME##*/}" ]; then  # Remove refs/heads/ prefix if present
              echo "Branch name matches: $name"
              match_found=true
            fi
          done

          if [ "$match_found" == "false" ]; then
            echo "Branch name does not match any known environment."
            exit 1
          fi
